// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
  EMPLOYEE
}

enum EmailStatus {
  PENDING
  SENT
  FAILED
}

model Company {
  id        String   @id @default(uuid())
  cnpj      String   @unique
  name      String
  lealName  String?  @map("leal_name")
  createdAt DateTime @default(now()) @map("created_at")

  photoId String? @map("photo_id")

  users       User[]
  attachments Attachment[]

  @@map("companies")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      UserRole
  active    Boolean   @default(false)
  photoId   String?   @map("photo_id")
  createdAt DateTime  @default(now()) @map("created_at")
  lastLogin DateTime? @map("last_login")
  deletedAt DateTime? @map("deleted_at")

  companyId String  @map("company_id")
  company   Company @relation(fields: [companyId], references: [id])

  attachments Attachment[]

  @@map("users")
}

model Email {
  id        String    @id @default(uuid())
  to        String
  subject   String
  body      String
  from      String?
  createdAt DateTime  @default(now()) @map("created_at")
  sentAt    DateTime? @map("sent_at")

  @@map("emails")
}

model Attachment {
  id    String @id @default(uuid())
  title String
  url   String

  companyId String  @map("company_id")
  company   Company @relation(fields: [companyId], references: [id])

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  @@map("attachments")
}
